{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/repos/repo-card/repo-card.component.ts","./src/app/components/repos/repo-card/repo-card.component.html","./src/app/components/repos/repo-list/repo-list.component.ts","./src/app/components/repos/repo-list/repo-list.component.html","./src/app/components/users/user-card/user-card.component.ts","./src/app/components/users/user-card/user-card.component.html","./src/app/components/users/user-list/user-list.component.ts","./src/app/components/users/user-list/user-list.component.html","./src/app/material/material.module.ts","./src/app/services/config/app-config.service.ts","./src/app/services/repos/repo.service.ts","./src/app/services/user/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserListComponent } from './components/users/user-list/user-list.component';\r\nimport { RepoListComponent } from './components/repos/repo-list/repo-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: UserListComponent },\r\n  { path: 'repos/:username/:page', component: RepoListComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'github-explorer';\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { UserCardComponent } from './components/users/user-card/user-card.component';\r\nimport { UserListComponent } from './components/users/user-list/user-list.component';\r\n\r\nimport { AppConfigService } from './services/config/app-config.service';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { RepoListComponent } from './components/repos/repo-list/repo-list.component';\r\nimport { RepoCardComponent } from './components/repos/repo-card/repo-card.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserCardComponent,\r\n    UserListComponent,\r\n    NavbarComponent,\r\n    RepoListComponent,\r\n    RepoCardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [{\r\n    provide: APP_INITIALIZER,\r\n    multi: true,\r\n    deps: [AppConfigService],\r\n    useFactory: (appConfigService: AppConfigService) => {\r\n      return () => {\r\n        return appConfigService.loadConfig();\r\n      };\r\n    }\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"toolbar\">\r\n    <mat-toolbar-row>\r\n        <button mat-button routerLink=\"/\">\r\n            <mat-icon>source</mat-icon>\r\n            <i>GitHub Explorer</i>\r\n        </button>\r\n        <span class=\"spacer\"></span>\r\n        <a class=\"repo-link\" href=\"https://github.com/AngelUrq/github-explorer\" target=\"_blank\">\r\n            Repository\r\n            <button mat-icon-button class=\"example-icon\">\r\n                <mat-icon>code</mat-icon>\r\n            </button>\r\n        </a>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'repo-card',\r\n  templateUrl: './repo-card.component.html',\r\n  styleUrls: ['./repo-card.component.css']\r\n})\r\nexport class RepoCardComponent implements OnInit {\r\n\r\n  @Input() name: string = '';\r\n  @Input() url: string = '';\r\n  @Input() description: string = '';\r\n  @Input() forks: number = 0;\r\n  @Input() openIssues: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"card\">\r\n    <mat-card-title class=\"card-title\">\r\n        <span>{{ name }}</span>\r\n        <mat-icon class=\"account-icon\">code</mat-icon>\r\n    </mat-card-title>\r\n    <mat-divider></mat-divider>\r\n    <mat-card-content class=\"card-content\">\r\n        <p>{{ description }}</p>\r\n        <ul>\r\n            <li><b>Forks</b>: {{ forks }}</li>\r\n            <li><b>Open Issues</b>: {{ openIssues }}</li>\r\n        </ul>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <button id=\"github-button\" class=\"btn-card\" mat-raised-button color=\"accent\">\r\n            <mat-icon>code</mat-icon>\r\n            Open in GitHub\r\n        </button>\r\n    </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { RepoService } from '../../../services/repos/repo.service';\r\nimport { UserService } from '../../../services/user/user.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-repo-list',\r\n  templateUrl: './repo-list.component.html',\r\n  styleUrls: ['./repo-list.component.css']\r\n})\r\nexport class RepoListComponent implements OnInit {\r\n\r\n  repos: Array<any> = [];\r\n  username: string = '';\r\n  page: number = 1;\r\n  totalCount: number = 0;\r\n\r\n  constructor(private _route: ActivatedRoute, private _router: Router, private _repoService: RepoService, private _userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      this.username = params.username;\r\n      this.page = parseInt(params.page);\r\n\r\n      this.getNumberRepos();\r\n      this.getRepos();\r\n    });\r\n  }\r\n\r\n  getNumberRepos(): void {\r\n    this._userService.getUser(this.username).subscribe(\r\n      response => {\r\n        this.totalCount = response.public_repos;\r\n        console.log(this.totalCount);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getRepos(): void {\r\n    this._repoService.get(this.username, this.page.toString()).subscribe(\r\n      response => {\r\n        this.repos = response.body;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  changePage(pageEvent: PageEvent): void {\r\n    this.page = pageEvent.pageIndex + 1;\r\n    this._router.navigateByUrl('repos/' + this.username + '/' + this.page);\r\n    this.getRepos();\r\n  }\r\n\r\n}\r\n","<div class=\"repo-container\">\r\n    <mat-card *ngIf=\"repos.length === 0\">\r\n        No repos were found\r\n    </mat-card>\r\n    <repo-card class=\"repo-card\" *ngFor=\"let repo of repos\" [id]=\"repo.name\" [name]=\"repo.name\" [url]=\"repo.html_url\"\r\n        [description]=\"repo.description ? repo.description : 'No description available'\" [forks]=\"repo.forks_count\"\r\n        [openIssues]=\"repo.open_issues_count\">\r\n    </repo-card>\r\n</div>\r\n<mat-paginator [length]=\"totalCount\" [pageIndex]=\"page - 1\" pageSize=\"4\" (page)=\"changePage($event)\">\r\n</mat-paginator>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'user-card',\r\n  templateUrl: './user-card.component.html',\r\n  styleUrls: ['./user-card.component.css']\r\n})\r\nexport class UserCardComponent implements OnInit {\r\n\r\n  @Input() username: string = '';\r\n  @Input() profileURL: string = '';\r\n  @Input() imageURL: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openGitHub(): void {\r\n    window.open(this.profileURL, '_blank');\r\n  }\r\n\r\n}\r\n","<mat-card class=\"card\">\r\n    <mat-card-title class=\"card-title\">\r\n        <span id=\"username-title\">{{ username }}</span>\r\n        <mat-icon class=\"account-icon\">face</mat-icon>\r\n    </mat-card-title>\r\n    <mat-divider></mat-divider>\r\n    <mat-grid-list class=\"card-content\" cols=\"4\">\r\n        <mat-grid-tile colspan=\"2\" rowspan=\"2\">\r\n            <img id=\"profile-picture\" class=\"profile-image\" [src]=\"imageURL\" alt=\"Profile photo\">\r\n        </mat-grid-tile>\r\n        <mat-grid-tile colspan=\"2\" rowspan=\"1\">\r\n            <mat-card-actions>\r\n                <button id=\"explore-button\" class=\"btn-card\" mat-raised-button color=\"primary\" [routerLink]=\"'repos/' + username + '/1'\">\r\n                    <mat-icon>explore</mat-icon>\r\n                    Explore repos\r\n                </button>\r\n            </mat-card-actions>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile colspan=\"2\" rowspan=\"1\">\r\n            <mat-card-actions>\r\n                <button id=\"github-button\" class=\"btn-card\" mat-raised-button color=\"accent\" (click)=\"openGitHub()\">\r\n                    <mat-icon>code</mat-icon>\r\n                    Open GitHub\r\n                </button>\r\n            </mat-card-actions>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../services/user/user.service';\r\nimport { AppConfigService } from '../../../services/config/app-config.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  users: Array<object> = [];\r\n  next: string = '';\r\n\r\n  constructor(private _userService: UserService, private _config: AppConfigService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n    this.next = this._config.getUsersURL();\r\n  }\r\n\r\n  getUsers(): void {\r\n    this._userService.getUsers(this.next).subscribe(\r\n      response => {\r\n        this.users = response.body;\r\n\r\n        if (response.headers.get('link')) {\r\n          this.next = this.getNext(response.headers.get('link'));\r\n        } else {\r\n          this.next = '';\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getNext(link: string): string{\r\n    let next: string = '';\r\n\r\n    let links: Array<string> = link.split(',');\r\n    next = links.find(str => str.indexOf('rel=\"next\"') > -1);\r\n    \r\n    if (next) next = next.substring(next.lastIndexOf('<')+1, next.lastIndexOf('>'));\r\n\r\n    return next;\r\n  }\r\n\r\n}\r\n","<div class=\"user-container\">\r\n    <user-card class=\"user-card\" *ngFor=\"let user of users\"\r\n        [id]=\"user.login\"\r\n        [username]=\"user.login\" \r\n        [profileURL]=\"user.html_url\" \r\n        [imageURL]=\"user.avatar_url\">\r\n    </user-card>\r\n    <button id=\"next-button\" class=\"btn\" mat-raised-button color=\"warn\" (click)=\"getUsers()\">\r\n        <mat-icon>arrow_right_alt</mat-icon>\r\n    </button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\nconst MATERIAL_COMPONENTS = [\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatGridListModule,\r\n  MatDividerModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatPaginatorModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [MATERIAL_COMPONENTS],\r\n  exports: [MATERIAL_COMPONENTS]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppConfigService {\r\n\r\n  private appConfig: any;\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  loadConfig() {\r\n    return this._http.get('/assets/config/config.json')\r\n      .toPromise()\r\n      .then(data => {\r\n        this.appConfig = data;\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  getUsersURL(): string {\r\n    if (this.appConfig) {\r\n      return this.appConfig.githubAPI.url + this.appConfig.githubAPI.get.users;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getUserURL(): string {\r\n    if (this.appConfig) {\r\n      return this.appConfig.githubAPI.url + this.appConfig.githubAPI.get.user;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getReposURL(username: string, page: string): string {\r\n    if (this.appConfig) {\r\n      return this.appConfig.githubAPI.url + this.appConfig.githubAPI.get.repos.replace('USERNAME', username).replace('PAGENUMBER', page);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConfigService } from '../config/app-config.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepoService {\r\n\r\n  getURL: string = '';\r\n\r\n  constructor(private _http: HttpClient, private _config: AppConfigService) { }\r\n\r\n  get(username: string, page: string): Observable<any> {\r\n    this.getURL = this._config.getReposURL(username, page);\r\n\r\n    return this._http.get(this.getURL, { observe: 'response' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConfigService } from '../config/app-config.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  getUsersURL: string = '';\r\n  getUserURL: string = '';\r\n\r\n  constructor(private _http: HttpClient, private _config: AppConfigService) { \r\n    this.getUsersURL = this._config.getUsersURL();\r\n    this.getUserURL = this._config.getUserURL();\r\n  }\r\n\r\n  getUsers(next: string): Observable<any> {\r\n    if (next) {\r\n      return this._http.get(next, { observe: 'response' });\r\n    } else {\r\n      return this._http.get(this.getUsersURL, { observe: 'response' });\r\n    }\r\n  }\r\n\r\n  getUser(username: string): Observable<any> {\r\n    return this._http.get(this.getUserURL + '/' + username);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}